{"version":3,"sources":["components/MovieGridItem/MovieGridItem.module.css","components/SearchBox/SearchBox.module.css","components/FilterBox/FilterBox.module.css","components/MovieGrid/MovieGrid.module.css","components/BackgroundInfo/BackgroundInfo.module.css","components/SearchBox/SearchBox.tsx","components/FilterBox/FilterBox.tsx","models/fetch-dispatch-action.ts","models/movie-dispatch-action.ts","state/action-creators/movie-action.ts","state/action-creators/fetch-action.ts","state/reducers/movie-reducer.ts","state/reducers/fetch-reducer.ts","state/reducers/index.ts","state/store.ts","components/TopBar/TopBar.tsx","components/MovieGridItem/MovieGridItem.tsx","components/MovieGrid/MovieGrid.tsx","components/BackgroundInfo/BackgroundInfo.tsx","App.tsx","state/hooks/documentTitle.ts","index.tsx","components/TopBar/TopBar.module.css"],"names":["module","exports","SearchBox","onChange","useState","formValue","setFormValue","handleChange","event","a","value","target","className","styles","main","data-testid","searchInput","placeholder","type","debounce","FilterBox","FetchState","MovieActionType","years","length","Date","getFullYear","Array","keys","map","i","getYears","id","name","select","year","setFilter","filter","dispatch","FILTER","payload","getMovies","axios","get","setMovies","MOVIES","LOADING","movies","data","results","SUCCESS","console","error","ERROR","setFetchState","state","defaultState","filteredMovies","reducer","action","movie","release_date","reducers","combineReducers","moviesState","movieReducer","fetchState","fetchReducer","store","createStore","applyMiddleware","thunk","TopBar","useDispatch","bindActionCreators","actionCreators","useSelector","title","titleMobile","forms","loader","searchBox","Number","MovieGridItem","card","director","openingCrawl","opening_crawl","MovieGrid","grid","episode_id","BackgroundInfo","ReducedState","msg","App","useEffect","document","useDocumentTitle","appState","includes","OK","NO_DATA","style","height","client","QueryClient","ReactDOM","render","QueryClientProvider","getElementById"],"mappings":"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","file":"static/js/main.8d77402e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MovieGridItem_main__2LR4O\",\"card\":\"MovieGridItem_card__18IAm\",\"openingCrawl\":\"MovieGridItem_openingCrawl__22gS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"SearchBox_searchInput__233Y1\",\"main\":\"SearchBox_main__j2kgI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"FilterBox_select__30_Fa\",\"main\":\"FilterBox_main__vgDYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"MovieGrid_grid__1kkiw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"BackgroundInfo_main__GhQpF\"};","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./SearchBox.module.css\";\r\nimport { debounce } from \"lodash\";\r\n\r\nexport type Props = {\r\n  onChange: (value: string) => void\r\n}\r\n\r\nfunction SearchBox({onChange}: Props) {\r\n  const [formValue, setFormValue] = useState(\"\");\r\n\r\n  const handleChange = async function (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) {\r\n    const value = event.target.value;\r\n    if (formValue === value) return;\r\n    setFormValue(value);\r\n    onChange(value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.main} data-testid=\"search-box\">\r\n      <form>\r\n        <input\r\n          data-testid=\"search-box-input\"\r\n          className={styles.searchInput}\r\n          placeholder=\"Search movie...\"\r\n          type=\"text\"\r\n          onChange={debounce(handleChange, 150)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import styles from \"./FilterBox.module.css\";\r\n\r\nexport type Props = {\r\n  onChange: (event: React.ChangeEvent<HTMLSelectElement>) => void\r\n}\r\n\r\nfunction FilterBox({onChange}: Props) {\r\n  const getYears = function () {\r\n    const START_YEAR = 1977;\r\n    const length = new Date().getFullYear() - START_YEAR + 1;\r\n    return [...Array(length).keys()].map((i) => i + START_YEAR);\r\n  };\r\n  const years = getYears();\r\n\r\n  return (\r\n    <div className={styles.main} data-testid=\"filter-box\">\r\n      <form>\r\n        <select\r\n          id=\"years\"\r\n          name=\"years\"\r\n          onChange={onChange}\r\n          className={styles.select}\r\n          data-testid=\"filter-box-select\"\r\n        >\r\n          {years.map((year) => (\r\n            <option key={year} value={year}>\r\n              {year}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterBox;\r\n","export enum FetchState {\r\n    LOADING = \"loading\",\r\n    ERROR = \"error\",\r\n    SUCCESS = \"success\"\r\n}\r\n\r\nexport type FetchStateAction = {\r\n  type: FetchState\r\n}","import { MovieData } from \"./movie-data\";\r\n\r\nexport enum MovieActionType {\r\n  FILTER = \"filter\",\r\n  MOVIES = \"fetch\",\r\n}\r\n\r\ninterface SetMovieAction {\r\n  type: MovieActionType.MOVIES;\r\n  payload: MovieData[];\r\n}\r\n\r\ninterface SetFilterAction {\r\n  type: MovieActionType.FILTER;\r\n  payload: number;\r\n}\r\n\r\nexport type MovieDispatchAction = SetMovieAction | SetFilterAction;\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { Dispatch } from \"react\";\r\nimport { FetchState } from \"../../models/fetch-dispatch-action\";\r\nimport { MovieApiResponse } from \"../../models/movie-api-response\";\r\n\r\nimport {\r\n  MovieActionType,\r\n  MovieDispatchAction,\r\n} from \"../../models/movie-dispatch-action\";\r\n\r\nexport const setFilter = function (filter: number) {\r\n  return (dispatch: Dispatch<MovieDispatchAction>) => {\r\n    dispatch({\r\n      type: MovieActionType.FILTER,\r\n      payload: filter,\r\n    });\r\n  };\r\n};\r\n\r\nconst getMovies = async function (\r\n  filter: string\r\n): Promise<AxiosResponse<MovieApiResponse>> {\r\n  return await axios.get(`https://swapi.dev/api/films/?search=${filter}`);\r\n};\r\n\r\nexport const setMovies = function (filter: string) {\r\n  return async (dispatch: Dispatch<any>) => {\r\n    if (filter === \"\") {\r\n      dispatch({\r\n        type: MovieActionType.MOVIES,\r\n        payload: [],\r\n      });\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: FetchState.LOADING });\r\n    try {\r\n      const movies = (await getMovies(filter)).data.results;\r\n      dispatch({\r\n        type: MovieActionType.MOVIES,\r\n        payload: movies,\r\n      });\r\n      dispatch({ type: FetchState.SUCCESS });\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch({ type: FetchState.ERROR });\r\n    }\r\n  };\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport { FetchState, FetchStateAction } from \"../../models/fetch-dispatch-action\";\r\n\r\nexport const setFetchState = function (state: FetchState) {\r\n  return (dispatch: Dispatch<FetchStateAction>) => {\r\n    return dispatch({\r\n      type: state\r\n    });\r\n  };\r\n};","import {\r\n  MovieActionType,\r\n  MovieDispatchAction,\r\n} from \"../../models/movie-dispatch-action\";\r\nimport { MovieState } from \"../../models/movie-state\";\r\n\r\nconst defaultState: MovieState = {\r\n  movies: [],\r\n  filteredMovies: [],\r\n  filter: 0,\r\n};\r\n\r\nconst reducer = function (\r\n  state: MovieState = defaultState,\r\n  action: MovieDispatchAction\r\n) {\r\n  switch (action.type) {\r\n    case MovieActionType.FILTER:\r\n      state.filter = action.payload;\r\n      break;\r\n    case MovieActionType.MOVIES:\r\n      state.movies = action.payload;\r\n      break;\r\n  }\r\n\r\n  state.filteredMovies = state.movies.filter((movie) => {\r\n    const date = new Date(movie.release_date);\r\n    return date.getFullYear() >= state.filter;\r\n  });\r\n\r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n  FetchState,\r\n  FetchStateAction,\r\n} from \"../../models/fetch-dispatch-action\";\r\n\r\nconst defaultState = FetchState.SUCCESS;\r\n\r\nconst reducer = function (\r\n  state: FetchState = defaultState,\r\n  action: FetchStateAction\r\n) {\r\n  switch (action.type) {\r\n    case FetchState.ERROR:\r\n    case FetchState.LOADING:\r\n    case FetchState.SUCCESS:\r\n      state = action.type;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport movieReducer from \"./movie-reducer\";\r\nimport fetchReducer from './fetch-reducer';\r\n\r\nconst reducers = combineReducers({\r\n  moviesState: movieReducer,\r\n  fetchState: fetchReducer\r\n});\r\n\r\nexport default reducers;\r\nexport type State = ReturnType<typeof reducers>;","import {createStore, applyMiddleware} from 'redux';\r\nimport reducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    {},\r\n    applyMiddleware(thunk)\r\n)\r\n","import styles from \"./TopBar.module.css\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport FilterBox from \"../FilterBox/FilterBox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCreators, State } from \"../../state\";\r\nimport { FetchState } from \"../../models/fetch-dispatch-action\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nfunction TopBar() {\r\n  const dispatch = useDispatch();\r\n  const { setFilter, setMovies } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const fetchState = useSelector((state: State) => state.fetchState);\r\n\r\n  const handleFilterChange = function (\r\n    event: React.ChangeEvent<HTMLSelectElement>\r\n  ) {\r\n    const filter = Number(event.target.value);\r\n    setFilter(filter);\r\n  };\r\n\r\n  const handleSearchChange = function (value: string) {\r\n    setMovies(value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <div className={styles.title}>SearchMovies</div>\r\n      <div className={styles.titleMobile}>SM</div>\r\n      <div className={styles.forms}>\r\n        {fetchState === FetchState.LOADING && (\r\n          <div className={styles.loader}></div>\r\n        )}\r\n        <div className={styles.searchBox}>\r\n          <SearchBox onChange={handleSearchChange}></SearchBox>\r\n        </div>\r\n        <FilterBox onChange={handleFilterChange}></FilterBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopBar;\r\n","import { MovieData } from \"../../models/movie-data\";\r\nimport styles from \"./MovieGridItem.module.css\";\r\n\r\ntype Props = {\r\n  movie: MovieData;\r\n};\r\n\r\nfunction MovieGridItem({ movie }: Props) {\r\n  return (\r\n    <div className={styles.main} data-testid=\"movie-grid-item\">\r\n      <div className={styles.card}>\r\n        <h3>{movie.title}</h3>\r\n        <h5>\r\n          {movie.director}, {movie.release_date}\r\n        </h5>\r\n        <div className={styles.openingCrawl}>{movie.opening_crawl}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieGridItem;\r\n","import { useSelector } from \"react-redux\";\r\nimport MovieGridItem from \"../MovieGridItem/MovieGridItem\";\r\nimport styles from \"./MovieGrid.module.css\";\r\nimport { State } from \"../../state\";\r\n\r\n\r\nfunction MovieGrid() {\r\n  const filteredMovies = useSelector(\r\n    (state: State) => state.moviesState.filteredMovies\r\n  );\r\n\r\n  return (\r\n    <div className={styles.grid}>\r\n      {filteredMovies.map((movie) => (\r\n        <MovieGridItem key={movie.episode_id} movie={movie} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieGrid;\r\n","import styles from \"./BackgroundInfo.module.css\";\r\n\r\nexport type Props = {\r\n    msg: string\r\n}\r\n\r\nfunction BackgroundInfo({msg}: Props) {\r\n    return (\r\n        <div className={styles.main} data-testid=\"background-info\">{msg}</div>\r\n    )\r\n}\r\n\r\nexport default BackgroundInfo;\r\n","import React from \"react\";\r\n\r\nimport TopBar from \"./components/TopBar/TopBar\";\r\nimport MovieGrid from \"./components/MovieGrid/MovieGrid\";\r\nimport BackgroundInfo from \"./components/BackgroundInfo/BackgroundInfo\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { State } from \"./state\";\r\nimport { FetchState } from \"./models/fetch-dispatch-action\";\r\nimport { useDocumentTitle } from \"./state/hooks/documentTitle\";\r\nimport { MovieData } from \"./models/movie-data\";\r\n\r\nenum ReducedState {\r\n  NO_DATA = \"noData\",\r\n  ERROR = \"error\",\r\n  OK = \"ok\",\r\n}\r\n\r\nfunction reduceState(fetchState: FetchState, filteredMovies: MovieData[]): ReducedState {\r\n  if ([FetchState.SUCCESS, FetchState.LOADING].includes(fetchState)) {\r\n    return filteredMovies.length > 0 ? ReducedState.OK : ReducedState.NO_DATA;\r\n  } else {\r\n    return ReducedState.ERROR;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  useDocumentTitle();\r\n  const appState = useSelector((state: State) => state);\r\n\r\n  const err = \"Something went wrong while processing your request :(\";\r\n  const noData = \"No data to display...\";\r\n\r\n  const state = reduceState(appState.fetchState, appState.moviesState.filteredMovies);\r\n\r\n  return (\r\n    <div>\r\n      <TopBar />\r\n      <div style={{ height: \"calc(100% - 60px)\" }}>\r\n        {state === ReducedState.OK && <MovieGrid/>}\r\n        {state === ReducedState.ERROR && <BackgroundInfo msg={err}/>}\r\n        {state === ReducedState.NO_DATA && <BackgroundInfo msg={noData}/>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { State } from \"../reducers\";\r\n\r\nexport function useDocumentTitle() {\r\n  const filteredMovies = useSelector(\r\n    (state: State) => state.moviesState.filteredMovies\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.title = filteredMovies[0] ? filteredMovies[0].title : 'Star Wars';\r\n  }, [filteredMovies]);\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./state/store\";\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </QueryClientProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"TopBar_main__3jbC7\",\"title\":\"TopBar_title__Bzx6C\",\"loader\":\"TopBar_loader__IWjuD\",\"titleMobile\":\"TopBar_titleMobile__KfqLi\",\"forms\":\"TopBar_forms__9mc9E\",\"searchBox\":\"TopBar_searchBox__VGWDu\",\"spin\":\"TopBar_spin__137HL\"};"],"sourceRoot":""}